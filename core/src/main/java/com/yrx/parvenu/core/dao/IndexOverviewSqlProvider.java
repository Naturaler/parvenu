package com.yrx.parvenu.core.dao;

import com.yrx.parvenu.core.pojo.IndexOverview;
import com.yrx.parvenu.core.pojo.IndexOverviewExample.Criteria;
import com.yrx.parvenu.core.pojo.IndexOverviewExample.Criterion;
import com.yrx.parvenu.core.pojo.IndexOverviewExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class IndexOverviewSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table index_overview
     *
     * @mbg.generated Thu Feb 20 16:19:53 CST 2020
     */
    public String countByExample(IndexOverviewExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("index_overview");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table index_overview
     *
     * @mbg.generated Thu Feb 20 16:19:53 CST 2020
     */
    public String deleteByExample(IndexOverviewExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("index_overview");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table index_overview
     *
     * @mbg.generated Thu Feb 20 16:19:53 CST 2020
     */
    public String insertSelective(IndexOverview record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("index_overview");
        
        if (record.getIndexId() != null) {
            sql.VALUES("index_id", "#{indexId,jdbcType=INTEGER}");
        }
        
        if (record.getIndexCode() != null) {
            sql.VALUES("index_code", "#{indexCode,jdbcType=VARCHAR}");
        }
        
        if (record.getIndxSname() != null) {
            sql.VALUES("indx_sname", "#{indxSname,jdbcType=VARCHAR}");
        }
        
        if (record.getIndexEname() != null) {
            sql.VALUES("index_ename", "#{indexEname,jdbcType=VARCHAR}");
        }
        
        if (record.getNum() != null) {
            sql.VALUES("num", "#{num,jdbcType=VARCHAR}");
        }
        
        if (record.getTclose() != null) {
            sql.VALUES("tclose", "#{tclose,jdbcType=VARCHAR}");
        }
        
        if (record.getYld1Mon() != null) {
            sql.VALUES("yld_1_mon", "#{yld1Mon,jdbcType=VARCHAR}");
        }
        
        if (record.getBasePoint() != null) {
            sql.VALUES("base_point", "#{basePoint,jdbcType=VARCHAR}");
        }
        
        if (record.getBaseDate() != null) {
            sql.VALUES("base_date", "#{baseDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getOnlineDate() != null) {
            sql.VALUES("online_date", "#{onlineDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIsCustom() != null) {
            sql.VALUES("is_custom", "#{isCustom,jdbcType=TINYINT}");
        }
        
        if (record.getIndexCIntro() != null) {
            sql.VALUES("index_c_intro", "#{indexCIntro,jdbcType=VARCHAR}");
        }
        
        if (record.getIndexEIntro() != null) {
            sql.VALUES("index_e_intro", "#{indexEIntro,jdbcType=VARCHAR}");
        }
        
        if (record.getIndexCFullname() != null) {
            sql.VALUES("index_c_fullname", "#{indexCFullname,jdbcType=VARCHAR}");
        }
        
        if (record.getIndexEFullname() != null) {
            sql.VALUES("index_e_fullname", "#{indexEFullname,jdbcType=VARCHAR}");
        }
        
        if (record.getClassSeries() != null) {
            sql.VALUES("class_series", "#{classSeries,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEseries() != null) {
            sql.VALUES("class_eseries", "#{classEseries,jdbcType=VARCHAR}");
        }
        
        if (record.getClassRegion() != null) {
            sql.VALUES("class_region", "#{classRegion,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEregion() != null) {
            sql.VALUES("class_eregion", "#{classEregion,jdbcType=VARCHAR}");
        }
        
        if (record.getClassAssets() != null) {
            sql.VALUES("class_assets", "#{classAssets,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEassets() != null) {
            sql.VALUES("class_eassets", "#{classEassets,jdbcType=VARCHAR}");
        }
        
        if (record.getClassClassify() != null) {
            sql.VALUES("class_classify", "#{classClassify,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEclassify() != null) {
            sql.VALUES("class_eclassify", "#{classEclassify,jdbcType=VARCHAR}");
        }
        
        if (record.getClassCurrency() != null) {
            sql.VALUES("class_currency", "#{classCurrency,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEcurrency() != null) {
            sql.VALUES("class_ecurrency", "#{classEcurrency,jdbcType=VARCHAR}");
        }
        
        if (record.getClassHot() != null) {
            sql.VALUES("class_hot", "#{classHot,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEhot() != null) {
            sql.VALUES("class_ehot", "#{classEhot,jdbcType=VARCHAR}");
        }
        
        if (record.getInsertTime() != null) {
            sql.VALUES("insert_time", "#{insertTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("update_time", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table index_overview
     *
     * @mbg.generated Thu Feb 20 16:19:53 CST 2020
     */
    public String selectByExample(IndexOverviewExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("id");
        } else {
            sql.SELECT("id");
        }
        sql.SELECT("index_id");
        sql.SELECT("index_code");
        sql.SELECT("indx_sname");
        sql.SELECT("index_ename");
        sql.SELECT("num");
        sql.SELECT("tclose");
        sql.SELECT("yld_1_mon");
        sql.SELECT("base_point");
        sql.SELECT("base_date");
        sql.SELECT("online_date");
        sql.SELECT("is_custom");
        sql.SELECT("index_c_intro");
        sql.SELECT("index_e_intro");
        sql.SELECT("index_c_fullname");
        sql.SELECT("index_e_fullname");
        sql.SELECT("class_series");
        sql.SELECT("class_eseries");
        sql.SELECT("class_region");
        sql.SELECT("class_eregion");
        sql.SELECT("class_assets");
        sql.SELECT("class_eassets");
        sql.SELECT("class_classify");
        sql.SELECT("class_eclassify");
        sql.SELECT("class_currency");
        sql.SELECT("class_ecurrency");
        sql.SELECT("class_hot");
        sql.SELECT("class_ehot");
        sql.SELECT("insert_time");
        sql.SELECT("update_time");
        sql.FROM("index_overview");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table index_overview
     *
     * @mbg.generated Thu Feb 20 16:19:53 CST 2020
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        IndexOverview record = (IndexOverview) parameter.get("record");
        IndexOverviewExample example = (IndexOverviewExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("index_overview");
        
        if (record.getId() != null) {
            sql.SET("id = #{record.id,jdbcType=INTEGER}");
        }
        
        if (record.getIndexId() != null) {
            sql.SET("index_id = #{record.indexId,jdbcType=INTEGER}");
        }
        
        if (record.getIndexCode() != null) {
            sql.SET("index_code = #{record.indexCode,jdbcType=VARCHAR}");
        }
        
        if (record.getIndxSname() != null) {
            sql.SET("indx_sname = #{record.indxSname,jdbcType=VARCHAR}");
        }
        
        if (record.getIndexEname() != null) {
            sql.SET("index_ename = #{record.indexEname,jdbcType=VARCHAR}");
        }
        
        if (record.getNum() != null) {
            sql.SET("num = #{record.num,jdbcType=VARCHAR}");
        }
        
        if (record.getTclose() != null) {
            sql.SET("tclose = #{record.tclose,jdbcType=VARCHAR}");
        }
        
        if (record.getYld1Mon() != null) {
            sql.SET("yld_1_mon = #{record.yld1Mon,jdbcType=VARCHAR}");
        }
        
        if (record.getBasePoint() != null) {
            sql.SET("base_point = #{record.basePoint,jdbcType=VARCHAR}");
        }
        
        if (record.getBaseDate() != null) {
            sql.SET("base_date = #{record.baseDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getOnlineDate() != null) {
            sql.SET("online_date = #{record.onlineDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIsCustom() != null) {
            sql.SET("is_custom = #{record.isCustom,jdbcType=TINYINT}");
        }
        
        if (record.getIndexCIntro() != null) {
            sql.SET("index_c_intro = #{record.indexCIntro,jdbcType=VARCHAR}");
        }
        
        if (record.getIndexEIntro() != null) {
            sql.SET("index_e_intro = #{record.indexEIntro,jdbcType=VARCHAR}");
        }
        
        if (record.getIndexCFullname() != null) {
            sql.SET("index_c_fullname = #{record.indexCFullname,jdbcType=VARCHAR}");
        }
        
        if (record.getIndexEFullname() != null) {
            sql.SET("index_e_fullname = #{record.indexEFullname,jdbcType=VARCHAR}");
        }
        
        if (record.getClassSeries() != null) {
            sql.SET("class_series = #{record.classSeries,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEseries() != null) {
            sql.SET("class_eseries = #{record.classEseries,jdbcType=VARCHAR}");
        }
        
        if (record.getClassRegion() != null) {
            sql.SET("class_region = #{record.classRegion,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEregion() != null) {
            sql.SET("class_eregion = #{record.classEregion,jdbcType=VARCHAR}");
        }
        
        if (record.getClassAssets() != null) {
            sql.SET("class_assets = #{record.classAssets,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEassets() != null) {
            sql.SET("class_eassets = #{record.classEassets,jdbcType=VARCHAR}");
        }
        
        if (record.getClassClassify() != null) {
            sql.SET("class_classify = #{record.classClassify,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEclassify() != null) {
            sql.SET("class_eclassify = #{record.classEclassify,jdbcType=VARCHAR}");
        }
        
        if (record.getClassCurrency() != null) {
            sql.SET("class_currency = #{record.classCurrency,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEcurrency() != null) {
            sql.SET("class_ecurrency = #{record.classEcurrency,jdbcType=VARCHAR}");
        }
        
        if (record.getClassHot() != null) {
            sql.SET("class_hot = #{record.classHot,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEhot() != null) {
            sql.SET("class_ehot = #{record.classEhot,jdbcType=VARCHAR}");
        }
        
        if (record.getInsertTime() != null) {
            sql.SET("insert_time = #{record.insertTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table index_overview
     *
     * @mbg.generated Thu Feb 20 16:19:53 CST 2020
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("index_overview");
        
        sql.SET("id = #{record.id,jdbcType=INTEGER}");
        sql.SET("index_id = #{record.indexId,jdbcType=INTEGER}");
        sql.SET("index_code = #{record.indexCode,jdbcType=VARCHAR}");
        sql.SET("indx_sname = #{record.indxSname,jdbcType=VARCHAR}");
        sql.SET("index_ename = #{record.indexEname,jdbcType=VARCHAR}");
        sql.SET("num = #{record.num,jdbcType=VARCHAR}");
        sql.SET("tclose = #{record.tclose,jdbcType=VARCHAR}");
        sql.SET("yld_1_mon = #{record.yld1Mon,jdbcType=VARCHAR}");
        sql.SET("base_point = #{record.basePoint,jdbcType=VARCHAR}");
        sql.SET("base_date = #{record.baseDate,jdbcType=TIMESTAMP}");
        sql.SET("online_date = #{record.onlineDate,jdbcType=TIMESTAMP}");
        sql.SET("is_custom = #{record.isCustom,jdbcType=TINYINT}");
        sql.SET("index_c_intro = #{record.indexCIntro,jdbcType=VARCHAR}");
        sql.SET("index_e_intro = #{record.indexEIntro,jdbcType=VARCHAR}");
        sql.SET("index_c_fullname = #{record.indexCFullname,jdbcType=VARCHAR}");
        sql.SET("index_e_fullname = #{record.indexEFullname,jdbcType=VARCHAR}");
        sql.SET("class_series = #{record.classSeries,jdbcType=VARCHAR}");
        sql.SET("class_eseries = #{record.classEseries,jdbcType=VARCHAR}");
        sql.SET("class_region = #{record.classRegion,jdbcType=VARCHAR}");
        sql.SET("class_eregion = #{record.classEregion,jdbcType=VARCHAR}");
        sql.SET("class_assets = #{record.classAssets,jdbcType=VARCHAR}");
        sql.SET("class_eassets = #{record.classEassets,jdbcType=VARCHAR}");
        sql.SET("class_classify = #{record.classClassify,jdbcType=VARCHAR}");
        sql.SET("class_eclassify = #{record.classEclassify,jdbcType=VARCHAR}");
        sql.SET("class_currency = #{record.classCurrency,jdbcType=VARCHAR}");
        sql.SET("class_ecurrency = #{record.classEcurrency,jdbcType=VARCHAR}");
        sql.SET("class_hot = #{record.classHot,jdbcType=VARCHAR}");
        sql.SET("class_ehot = #{record.classEhot,jdbcType=VARCHAR}");
        sql.SET("insert_time = #{record.insertTime,jdbcType=TIMESTAMP}");
        sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        
        IndexOverviewExample example = (IndexOverviewExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table index_overview
     *
     * @mbg.generated Thu Feb 20 16:19:53 CST 2020
     */
    public String updateByPrimaryKeySelective(IndexOverview record) {
        SQL sql = new SQL();
        sql.UPDATE("index_overview");
        
        if (record.getIndexId() != null) {
            sql.SET("index_id = #{indexId,jdbcType=INTEGER}");
        }
        
        if (record.getIndexCode() != null) {
            sql.SET("index_code = #{indexCode,jdbcType=VARCHAR}");
        }
        
        if (record.getIndxSname() != null) {
            sql.SET("indx_sname = #{indxSname,jdbcType=VARCHAR}");
        }
        
        if (record.getIndexEname() != null) {
            sql.SET("index_ename = #{indexEname,jdbcType=VARCHAR}");
        }
        
        if (record.getNum() != null) {
            sql.SET("num = #{num,jdbcType=VARCHAR}");
        }
        
        if (record.getTclose() != null) {
            sql.SET("tclose = #{tclose,jdbcType=VARCHAR}");
        }
        
        if (record.getYld1Mon() != null) {
            sql.SET("yld_1_mon = #{yld1Mon,jdbcType=VARCHAR}");
        }
        
        if (record.getBasePoint() != null) {
            sql.SET("base_point = #{basePoint,jdbcType=VARCHAR}");
        }
        
        if (record.getBaseDate() != null) {
            sql.SET("base_date = #{baseDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getOnlineDate() != null) {
            sql.SET("online_date = #{onlineDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIsCustom() != null) {
            sql.SET("is_custom = #{isCustom,jdbcType=TINYINT}");
        }
        
        if (record.getIndexCIntro() != null) {
            sql.SET("index_c_intro = #{indexCIntro,jdbcType=VARCHAR}");
        }
        
        if (record.getIndexEIntro() != null) {
            sql.SET("index_e_intro = #{indexEIntro,jdbcType=VARCHAR}");
        }
        
        if (record.getIndexCFullname() != null) {
            sql.SET("index_c_fullname = #{indexCFullname,jdbcType=VARCHAR}");
        }
        
        if (record.getIndexEFullname() != null) {
            sql.SET("index_e_fullname = #{indexEFullname,jdbcType=VARCHAR}");
        }
        
        if (record.getClassSeries() != null) {
            sql.SET("class_series = #{classSeries,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEseries() != null) {
            sql.SET("class_eseries = #{classEseries,jdbcType=VARCHAR}");
        }
        
        if (record.getClassRegion() != null) {
            sql.SET("class_region = #{classRegion,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEregion() != null) {
            sql.SET("class_eregion = #{classEregion,jdbcType=VARCHAR}");
        }
        
        if (record.getClassAssets() != null) {
            sql.SET("class_assets = #{classAssets,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEassets() != null) {
            sql.SET("class_eassets = #{classEassets,jdbcType=VARCHAR}");
        }
        
        if (record.getClassClassify() != null) {
            sql.SET("class_classify = #{classClassify,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEclassify() != null) {
            sql.SET("class_eclassify = #{classEclassify,jdbcType=VARCHAR}");
        }
        
        if (record.getClassCurrency() != null) {
            sql.SET("class_currency = #{classCurrency,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEcurrency() != null) {
            sql.SET("class_ecurrency = #{classEcurrency,jdbcType=VARCHAR}");
        }
        
        if (record.getClassHot() != null) {
            sql.SET("class_hot = #{classHot,jdbcType=VARCHAR}");
        }
        
        if (record.getClassEhot() != null) {
            sql.SET("class_ehot = #{classEhot,jdbcType=VARCHAR}");
        }
        
        if (record.getInsertTime() != null) {
            sql.SET("insert_time = #{insertTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{updateTime,jdbcType=TIMESTAMP}");
        }
        
        sql.WHERE("id = #{id,jdbcType=INTEGER}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table index_overview
     *
     * @mbg.generated Thu Feb 20 16:19:53 CST 2020
     */
    protected void applyWhere(SQL sql, IndexOverviewExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}